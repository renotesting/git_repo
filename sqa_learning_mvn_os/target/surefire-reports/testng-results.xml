<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="40" passed="40">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="90" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:03Z">
    <groups>
      <group name="functest">
        <method signature="testNg.FruitTest.appleNameTest()" name="appleNameTest" class="testNg.FruitTest"/>
        <method signature="testNg.FruitTest.fruitNameTest()" name="fruitNameTest" class="testNg.FruitTest"/>
        <method signature="testNg.GroupTestExample.testPrintMessage()" name="testPrintMessage" class="testNg.GroupTestExample"/>
        <method signature="testNg.GroupTestExample.testingExitMessage()" name="testingExitMessage" class="testNg.GroupTestExample"/>
        <method signature="testNg.TestMessage1.testPrintMessage()" name="testPrintMessage" class="testNg.TestMessage1"/>
        <method signature="testNg.TestNGSimpleTest.testArithmaticException()" name="testArithmaticException" class="testNg.TestNGSimpleTest"/>
        <method signature="testNg.TestNGSimpleTest.testInvocationTest()" name="testInvocationTest" class="testNg.TestNGSimpleTest"/>
        <method signature="testNg.TestNGSimpleTest.testMsg()" name="testMsg" class="testNg.TestNGSimpleTest"/>
        <method signature="testNg.TestNGSimpleTest.testPercentageTest()" name="testPercentageTest" class="testNg.TestNGSimpleTest"/>
      </group>
      <group name="checkintest">
        <method signature="testNg.GroupTestExample.testPrintMessage()" name="testPrintMessage" class="testNg.GroupTestExample"/>
        <method signature="testNg.GroupTestExample.testSalutationMessage()" name="testSalutationMessage" class="testNg.GroupTestExample"/>
        <method signature="testNg.ParamTestWithDataProvider1.testAdd(int, int, int)" name="testAdd" class="testNg.ParamTestWithDataProvider1"/>
        <method signature="testNg.ParamTestWithDataProvider1.testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)" name="testPrimeNumberChecker" class="testNg.ParamTestWithDataProvider1"/>
      </group>
    </groups>
    <test name="Test" duration-ms="90" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:03Z">
      <class name="testNg.TestMessage1">
        <test-method status="PASS" signature="testPrintMessage()" name="testPrintMessage" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
      </class>
      <class name="testNg.ParameterizedTest1">
        <test-method status="PASS" signature="parameterTest(java.lang.String, java.lang.String)" name="parameterTest" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
        </test-method>
      </class>
      <class name="testNg.GroupTestExample">
        <test-method status="PASS" signature="test1()" name="test1" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPrintMessage()" name="testPrintMessage" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testSalutationMessage()" name="testSalutationMessage" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testingExitMessage()" name="testingExitMessage" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
      </class>
      <class name="testNg.CalculatorTestNg">
        <test-method status="PASS" signature="testAddByNg()" name="testAddByNg" duration-ms="7" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
      </class>
      <class name="testNg.ParamTestWithDataProviderClass">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testAdd(int, int, int)" name="testAdd" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testAdd(int, int, int)" name="testAdd" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testAdd(int, int, int)" name="testAdd" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)" name="testPrimeNumberChecker" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)" name="testPrimeNumberChecker" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)" name="testPrimeNumberChecker" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)" name="testPrimeNumberChecker" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)" name="testPrimeNumberChecker" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="testNg.TestNGSimpleTest">
        <test-method status="PASS" signature="testArithmaticException()" name="testArithmaticException" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at testNg.TestNGSimpleTest.testArithmaticException(TestNGSimpleTest.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:36)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$CountDownLatchedRunnable.run(ThreadUtil.java:165)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testInvocationTest()" name="testInvocationTest" duration-ms="2" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testMsg()" name="testMsg" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPercentageTest()" name="testPercentageTest" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPercentageTest()" name="testPercentageTest" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPercentageTest()" name="testPercentageTest" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPercentageTest()" name="testPercentageTest" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPercentageTest()" name="testPercentageTest" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPercentageTest()" name="testPercentageTest" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPercentageTest()" name="testPercentageTest" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPercentageTest()" name="testPercentageTest" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPercentageTest()" name="testPercentageTest" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:03Z">
        </test-method>
        <test-method status="PASS" signature="testPercentageTest()" name="testPercentageTest" duration-ms="0" started-at="2014-11-22T19:07:03Z" finished-at="2014-11-22T19:07:03Z">
        </test-method>
      </class>
      <class name="testNg.TestingTestNgLifeCycle">
        <test-method status="PASS" signature="beforeSuite()" name="beforeSuite" is-config="true" duration-ms="24" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="beforeTest()" name="beforeTest" is-config="true" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="beforeGroups()" name="beforeGroups" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="Case2()" name="Case2" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="afterMethod()" name="afterMethod" is-config="true" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testCase1()" name="testCase1" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="afterMethod()" name="afterMethod" is-config="true" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="afterGroups()" name="afterGroups" is-config="true" duration-ms="0" started-at="2014-11-22T19:07:03Z" finished-at="2014-11-22T19:07:03Z">
        </test-method>
        <test-method status="PASS" signature="afterTest()" name="afterTest" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:03Z" finished-at="2014-11-22T19:07:03Z">
        </test-method>
        <test-method status="PASS" signature="afterSuite()" name="afterSuite" is-config="true" duration-ms="0" started-at="2014-11-22T19:07:03Z" finished-at="2014-11-22T19:07:03Z">
        </test-method>
      </class>
      <class name="testNg.FruitTest">
        <test-method status="PASS" signature="appleNameTest()" name="appleNameTest" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="fruitNameTest()" name="fruitNameTest" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
      </class>
      <class name="testNg.ParamTestWithDataProvider1">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testAdd(int, int, int)" name="testAdd" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testAdd(int, int, int)" name="testAdd" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testAdd(int, int, int)" name="testAdd" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)" name="testPrimeNumberChecker" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)" name="testPrimeNumberChecker" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)" name="testPrimeNumberChecker" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
        </test-method>
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)" name="testPrimeNumberChecker" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)" name="testPrimeNumberChecker" duration-ms="0" started-at="2014-11-22T19:07:02Z" finished-at="2014-11-22T19:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
